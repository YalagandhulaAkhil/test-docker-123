AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM roles & instance profile for ECS (Execution, Task, EC2 Host)"

# ─────────────────────────────────────────────
# Parameters (you can override names at deploy)
# ─────────────────────────────────────────────
Parameters:
  ExecutionRoleName:
    Type: String
    Default: ECSExecutionRole       # role the ECS agent uses
  TaskRoleName:
    Type: String
    Default: ECSTaskRole            # role your containers assume
  InstanceRoleName:
    Type: String
    Default: ECSInstanceRole        # role attached to EC2 hosts

# ─────────────────────────────────────────────
# Resources
# ─────────────────────────────────────────────
Resources:

  # 1. ECS Task Execution Role
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ExecutionRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ecs-tasks.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # 2. ECS Task Role (add app policies here)
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref TaskRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ecs-tasks.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MinimalS3List
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:ListAllMyBuckets
                Resource: "*"

  # 3. Instance Role for EC2 hosts
  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref InstanceRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ec2.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  # 4. Instance Profile wrapping the instance role
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [ !Ref ECSInstanceRole ]

# ─────────────────────────────────────────────
# Outputs (exported for other modules)
# ─────────────────────────────────────────────
Outputs:

  ECSExecutionRoleArn:
    Description: ARN of ECS Task Execution Role
    Value: !GetAtt ECSExecutionRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ECSExecutionRoleArn"

  ECSTaskRoleArn:
    Description: ARN of ECS Task Role
    Value: !GetAtt ECSTaskRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ECSTaskRoleArn"

  ECSInstanceProfileArn:
    Description: ARN of EC2 Instance Profile for ECS hosts
    Value: !GetAtt ECSInstanceProfile.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ECSInstanceProfileArn"
