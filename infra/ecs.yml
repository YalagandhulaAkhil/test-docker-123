AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Free-tier ECS cluster (EC2 launch type) with 1× t2.micro host
  and an Auto Scaling capacity provider – no SSH key.

Parameters:
  ECSClusterName:
    Type: String
    Default: html-ecs
    Description: ECS cluster name

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the host will run

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public subnets with IGW (for ECS agent)

  Ec2InstanceProfileArn:
    Type: String
    Description: ARN of the EC2 instance profile (from IAM stack)

  LatestECSAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2023/recommended/image_id
    Description: ECS-optimized AMI via SSM (always latest)

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ECSClusterName

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from anywhere
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${ECSClusterName}-sg"

  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${ECSClusterName}-lt"
      LaunchTemplateData:
        ImageId: !Ref LatestECSAMI
        InstanceType: t2.micro
        IamInstanceProfile:
          Arn: !Ref Ec2InstanceProfileArn
        SecurityGroupIds:
          - !Ref ECSSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=${ECSClusterName} >> /etc/ecs/ecs.config

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref ECSLaunchTemplate
        Version: !GetAtt ECSLaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: !Sub "${ECSClusterName}-host"
          PropagateAtLaunch: true

  ECSCapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn: !Ref ECSAutoScalingGroup
        ManagedScaling:
          Status: ENABLED
          TargetCapacity: 100
      Name: !Sub "${ECSClusterName}-cp"

  ECSClusterUpdate:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      Cluster: !Ref ECSCluster
      CapacityProviders:
        - !Ref ECSCapacityProvider
      DefaultCapacityProviderStrategy:
        - CapacityProvider: !Ref ECSCapacityProvider
          Weight: 1

Outputs:
  ECSClusterName:
    Description: Name of the ECS cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub "${AWS::StackName}-ECSClusterName"

  ECSSecurityGroupId:
    Description: Security Group ID for ECS service
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-ECSSecurityGroupId"
