AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Cluster + Task + Service (EC2 Launch Type)

Parameters:
  PImageUrl:
    Type: String
  PVpcId:
    Type: AWS::EC2::VPC::Id
  PSubnet1:
    Type: AWS::EC2::Subnet::Id
  PSubnet2:
    Type: AWS::EC2::Subnet::Id
  PExecutionRoleArn:
    Type: String

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: test-docker-cluster

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref ECSInstanceRole]

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0ee8244746ec5d6d4  # Amazon ECS-optimized AMI (us-east-1)
      InstanceType: t3.micro
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroups: [!Ref InstanceSG]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      VPCZoneIdentifier: [!Ref PSubnet1, !Ref PSubnet2]

  InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from ALB to container
      VpcId: !Ref PVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: test-docker-task
      NetworkMode: bridge
      RequiresCompatibilities: [EC2]
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref PExecutionRoleArn
      ContainerDefinitions:
        - Name: app
          Image: !Ref PImageUrl
          Essential: true
          PortMappings:
            - ContainerPort: 8080

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: AutoScalingGroup
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: EC2
      TaskDefinition: !Ref TaskDefinition
