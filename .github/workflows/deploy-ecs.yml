name: Deploy ECS Cluster (cluster-only, port 8080)

on:
  push:
    branches: [main]
    paths:
      - "infra/ecs.yml"                     # cluster template
      - ".github/workflows/deploy-ecs-cluster.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  # ───── Values kept in GitHub Secrets ─────
  AWS_REGION:  ${{ secrets.AWS_REGION }}    # e.g. us-east-1
  STACK_NAME:  ${{ secrets.STACK_NAME }}    # e.g. my-ecs-cluster
  # ───── Names of prerequisite stacks ─────
  VPC_STACK:   my-vpc-stack                 # adjust if different
  IAM_STACK:   my-iam-stack                 # exports ECSInstanceProfileName

jobs:
  deploy-cluster:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      # ─── Gather required CloudFormation exports ───
      - name: Collect stack outputs
        id: exports
        run: |
          get_export () {
            aws cloudformation list-exports \
              --query "Exports[?Name=='$1'].Value" --output text
          }

          echo "VPC_ID=$(get_export ${VPC_STACK}-VpcId)"                           >> $GITHUB_ENV
          echo "SUBNET1=$(get_export ${VPC_STACK}-PublicSubnet1Id)"                >> $GITHUB_ENV
          echo "SUBNET2=$(get_export ${VPC_STACK}-PublicSubnet2Id)"                >> $GITHUB_ENV
          echo "PROFILE_ARN=$(get_export ${IAM_STACK}-ECSInstanceProfileName)"     >> $GITHUB_ENV

      # ─── Deploy / update ECS cluster stack ───
      - name: Deploy ECS Cluster stack
        run: |
          aws cloudformation deploy \
            --stack-name ${STACK_NAME} \
            --template-file infra/ecs.yml \
            --parameter-overrides \
                ECSClusterName=myhtml-site \
                PVpcId=${VPC_ID} \
                PSubnet1=${SUBNET1} \
                PSubnet2=${SUBNET2} \
                PInstanceProfileArn=${PROFILE_ARN} \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset
