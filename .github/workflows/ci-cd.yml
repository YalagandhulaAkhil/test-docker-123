# .github/workflows/ci-cd.yml
name: CI-CD Phase 1 & 2

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_STACK: phase1-ecr-stack
  ECS_STACK: phase2-ecs-stack
  REPO_NAME: my-html-site

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and push Docker image
        run: |
          aws ecr describe-repositories --repository-names $REPO_NAME || \
          aws ecr create-repository --repository-name $REPO_NAME

          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${REPO_NAME}:latest"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t $IMAGE_URI .
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker push $IMAGE_URI

      - name: Deploy Phase 1 - ECR Stack
        run: |
          aws cloudformation deploy \
            --stack-name "$ECR_STACK" \
            --template-file infra/phase1-ecr.yml \
            --parameter-overrides RepoName=$REPO_NAME \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Deploy Phase 2 - ECS EC2 Cluster
        run: |
          aws cloudformation deploy \
            --stack-name "$ECS_STACK" \
            --template-file infra/phase2-ecs.yml \
            --parameter-overrides ImageUrl=$IMAGE_URI \
            --capabilities CAPABILITY_NAMED_IAM
