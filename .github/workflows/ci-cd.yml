name: Deploy ECS EC2 via CloudFormation

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
      STACK_NAME: ${{ secrets.STACK_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, Push Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:latest"
          docker build -t $IMAGE_URI .
          aws ecr describe-repositories --repository-names "$ECR_REPO" || \
            aws ecr create-repository --repository-name "$ECR_REPO"
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Deploy CloudFormation stack
        run: |
          echo "Deploying CloudFormation stack..."
          set +e  # Don't exit on failure so we can debug
          aws cloudformation deploy \
            --stack-name "$STACK_NAME" \
            --template-file infra/ecs.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides ImageUrl="$IMAGE_URI"
          DEPLOY_EXIT_CODE=$?
          if [ $DEPLOY_EXIT_CODE -ne 0 ]; then
            echo "⚠️ CloudFormation deploy failed. Fetching failure events..."
            aws cloudformation describe-stack-events --stack-name "$STACK_NAME" \
              --query 'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`ROLLBACK_IN_PROGRESS` || ResourceStatus==`ROLLBACK_FAILED`].[ResourceType, LogicalResourceId, ResourceStatusReason]' \
              --output table
            exit $DEPLOY_EXIT_CODE
          else
            echo "✅ CloudFormation stack deployed successfully."
          fi
