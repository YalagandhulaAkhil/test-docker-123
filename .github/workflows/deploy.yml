name: Deploy to ECS

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO:   ${{ secrets.ECR_REPO }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set image tag
      run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Login to ECR
      run: |
        aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REPO

    - name: Build and push Docker image
      run: |
        docker build -t $ECR_REPO:$TAG .
        docker push $ECR_REPO:$TAG

    - name: Update task definition with image
      run: |
        jq --arg IMG "$ECR_REPO:$TAG" '.containerDefinitions[0].image = $IMG' taskdef.json > taskdef_rendered.json

    - name: Register ECS Task Definition
      run: |
        aws ecs register-task-definition \
          --cli-input-json file://taskdef_rendered.json \
          --output text

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition html-app \
          --force-new-deployment
