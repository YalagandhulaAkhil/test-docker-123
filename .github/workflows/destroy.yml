name: Destroy Phase-1 (stack + ECR repo)

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: "ECR repo to delete (leave blank to use secrets.ECR_REPO)"
        required: false
        default: ""

permissions:
  id-token: write
  contents:  read

env:
  AWS_REGION:   ${{ secrets.AWS_REGION }}
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
  STACK_NAME:   phase1-ecr-stack
  REPO_NAME:    ${{ github.event.inputs.repo_name != '' && github.event.inputs.repo_name || secrets.ECR_REPO }}

jobs:
  nuke:
    runs-on: ubuntu-latest

    steps:
      # ── OIDC auth ─────────────────────────────────────────────
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      # ── Empty the ECR repo (if it exists) ────────────────────
      - name: Empty ECR repository images
        run: |
          set -e
          echo "🔎 Checking for images in $REPO_NAME ..."
          IMAGES=$(aws ecr list-images --repository-name "$REPO_NAME" --query 'imageIds' --output json 2>/dev/null || echo "[]")
          if [ "$IMAGES" != "[]" ]; then
            echo "🗑  Deleting images in $REPO_NAME ..."
            aws ecr batch-delete-image --repository-name "$REPO_NAME" --image-ids "$IMAGES" || true
          else
            echo "ℹ️  Repo empty or not found."
          fi

      # ── Force-delete the repo (removes remaining images) ─────
      - name: Delete ECR repository
        run: |
          echo "🗑  Deleting ECR repo $REPO_NAME (if it exists) ..."
          aws ecr delete-repository --repository-name "$REPO_NAME" --force || true

      # ── Delete the CloudFormation stack (retry once) ─────────
      - name: Delete Phase-1 stack
        run: |
          set -e
          echo "🗑  Deleting CloudFormation stack $STACK_NAME ..."
          aws cloudformation delete-stack --stack-name "$STACK_NAME"
          if aws cloudformation wait stack-delete-complete --stack-name "$STACK_NAME"; then
            echo "✅ Stack deleted."
            exit 0
          fi
          echo "⚠️  Stack stuck in DELETE_FAILED, retrying once ..."
          aws cloudformation delete-stack --stack-name "$STACK_NAME"
          aws cloudformation wait stack-delete-complete --stack-name "$STACK_NAME"
          echo "✅ Stack deleted after retry."
