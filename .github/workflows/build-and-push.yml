name: Build & Push Docker Image to ECR
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
on:
  push:
    branches: [ main ]                # adjust if you use a different branch
    paths:
      - 'Dockerfile'
      - '**/*.py'                     # your source code â€“ tweak as needed
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch:
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
permissions:
  id-token: write       # â–ºÂ OIDC
  contents:  read
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
env:
  AWS_REGION:      ${{ secrets.AWS_REGION }}       # e.g. usâ€‘eastâ€‘1
  ECR_STACK:       ecr-stack                       # CFN stack name
  S3_BUCKET_NAME:  ${{ secrets.S3_BUCKET_NAME }}   # bucket that stores outputs.txt
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_sha: ${{ steps.push.outputs.sha }}     # downstream workflows can use this

    steps:
    # 1. Checkout repo
    - uses: actions/checkout@v4

    # 2. Configure AWS credentials via OIDC
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region:     ${{ env.AWS_REGION }}

    # 3. Read RepoUri from ecrâ€‘stack outputs
    - name: Fetch ECR RepoUri
      id: repo
      run: |
        set -euo pipefail
        aws s3 cp "s3://${S3_BUCKET_NAME}/${ECR_STACK}/outputs.txt" repo.txt
        REPO_URI=$(grep -E '^ *RepoUri *= *' repo.txt | cut -d '=' -f2 | xargs)
        if [[ -z "$REPO_URI" ]]; then
          echo "::error ::RepoUri not found in S3 outputs â€“ has ecrâ€‘stack run?" >&2
          exit 1
        fi
        echo "REPO_URI=${REPO_URI}" >> "$GITHUB_ENV"
        echo "::notice ::Using ECR repo $REPO_URI"

    # 4. Log in to AmazonÂ ECR
    - name: Login to AmazonÂ ECR
      uses: aws-actions/amazon-ecr-login@v2

    # 5. Build & push image
    - name: Build, tag & push
      id: push
      run: |
        set -e
        SHA=$(git rev-parse --short HEAD)
        echo "ðŸ”¨  Building imageâ€¦"
        docker build -t "$REPO_URI:latest" -t "$REPO_URI:$SHA" .
        echo "ðŸ“¤  Pushing tagsâ€¦"
        docker push "$REPO_URI:latest"
        docker push "$REPO_URI:$SHA"
        echo "sha=$SHA" >> "$GITHUB_OUTPUT"

    # 6. Summary
    - name: Show result
      run: echo "âœ…  Pushed $REPO_URI:latest and :${{ steps.push.outputs.sha }}"
